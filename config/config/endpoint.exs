import Config

config :chatbot, ChatbotWeb.Endpoint,
  # url: [host: "localhost"],
  adapter: Bandit.PhoenixAdapter,
  render_errors: [
    formats: [html: ChatbotWeb.ErrorHTML, json: ChatbotWeb.ErrorJSON],
    layout: false
  ],
  pubsub_server: Chatbot.PubSub,
  live_view: [signing_salt: "vbc15Cno"]

if config_env() == :dev do
  config :chatbot, ChatbotWeb.Endpoint,
    # Binding to loopback ipv4 address prevents access from other machines.
    # Change to `ip: {0, 0, 0, 0}` to allow access from other machines.
    http: [ip: {127, 0, 0, 1}, port: 4000],
    check_origin: false,
    code_reloader: true,
    debug_errors: true,
    watchers: [
      node: ["build.js", "--watch", cd: Path.expand("../../assets", __DIR__)]
    ],
    # Watch static and templates for browser reloading.
    live_reload: [
      patterns: [
        ~r"priv/static/(?!uploads/).*(js|css|png|jpeg|jpg|gif|svg)$",
        ~r"priv/gettext/.*(po)$",
        ~r"lib/chatbot_web/(controllers|live|components)/.*(ex|heex)$"
      ]
    ]

  # Enable dev routes for dashboard and mailbox
  config :chatbot, dev_routes: true
end

if config_env() == :test do
  config :chatbot, ChatbotWeb.Endpoint,
    http: [ip: {127, 0, 0, 1}, port: 4002],
    server: false
end

if config_env() == :prod do
  # Note we also include the path to a cache manifest
  # containing the digested version of static files. This
  # manifest is generated by the `mix assets.deploy` task,
  # which you should run after static files are built and
  # before starting your production server.
  config :chatbot,
         ChatbotWeb.Endpoint,
         cache_static_manifest: "priv/static/cache_manifest.json",
         server: true,
         http: [
           # Enable IPv6 and bind on all interfaces.
           # Set it to  {0, 0, 0, 0, 0, 0, 0, 1} for local network only access.
           # See the documentation on https://hexdocs.pm/bandit/Bandit.html#t:options/0
           # for details about using IPv6 vs IPv4 and loopback vs public addresses.
           ip: {0, 0, 0, 0, 0, 0, 0, 0},
           port: 4000
         ]
end
